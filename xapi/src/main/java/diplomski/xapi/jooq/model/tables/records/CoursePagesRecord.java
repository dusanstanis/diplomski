/*
 * This file is generated by jOOQ.
 */
package diplomski.xapi.jooq.model.tables.records;


import diplomski.xapi.jooq.model.tables.CoursePages;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoursePagesRecord extends TableRecordImpl<CoursePagesRecord> implements Record3<Integer, String, String> {

    private static final long serialVersionUID = 777191403;

    /**
     * Setter for <code>public.COURSE_PAGES.pageNumber</code>.
     */
    public void setPagenumber(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.COURSE_PAGES.pageNumber</code>.
     */
    public Integer getPagenumber() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.COURSE_PAGES.dataText</code>.
     */
    public void setDatatext(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.COURSE_PAGES.dataText</code>.
     */
    public String getDatatext() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.COURSE_PAGES.courseId</code>.
     */
    public void setCourseid(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.COURSE_PAGES.courseId</code>.
     */
    public String getCourseid() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return CoursePages.COURSE_PAGES.PAGENUMBER;
    }

    @Override
    public Field<String> field2() {
        return CoursePages.COURSE_PAGES.DATATEXT;
    }

    @Override
    public Field<String> field3() {
        return CoursePages.COURSE_PAGES.COURSEID;
    }

    @Override
    public Integer component1() {
        return getPagenumber();
    }

    @Override
    public String component2() {
        return getDatatext();
    }

    @Override
    public String component3() {
        return getCourseid();
    }

    @Override
    public Integer value1() {
        return getPagenumber();
    }

    @Override
    public String value2() {
        return getDatatext();
    }

    @Override
    public String value3() {
        return getCourseid();
    }

    @Override
    public CoursePagesRecord value1(Integer value) {
        setPagenumber(value);
        return this;
    }

    @Override
    public CoursePagesRecord value2(String value) {
        setDatatext(value);
        return this;
    }

    @Override
    public CoursePagesRecord value3(String value) {
        setCourseid(value);
        return this;
    }

    @Override
    public CoursePagesRecord values(Integer value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoursePagesRecord
     */
    public CoursePagesRecord() {
        super(CoursePages.COURSE_PAGES);
    }

    /**
     * Create a detached, initialised CoursePagesRecord
     */
    public CoursePagesRecord(Integer pagenumber, String datatext, String courseid) {
        super(CoursePages.COURSE_PAGES);

        set(0, pagenumber);
        set(1, datatext);
        set(2, courseid);
    }
}
